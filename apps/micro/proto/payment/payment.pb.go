// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/payment/payment.proto

package payment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PayReq struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayReq) Reset()         { *m = PayReq{} }
func (m *PayReq) String() string { return proto.CompactTextString(m) }
func (*PayReq) ProtoMessage()    {}
func (*PayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78ce6d11f0608d17, []int{0}
}

func (m *PayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayReq.Unmarshal(m, b)
}
func (m *PayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayReq.Marshal(b, m, deterministic)
}
func (m *PayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayReq.Merge(m, src)
}
func (m *PayReq) XXX_Size() int {
	return xxx_messageInfo_PayReq.Size(m)
}
func (m *PayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PayReq.DiscardUnknown(m)
}

var xxx_messageInfo_PayReq proto.InternalMessageInfo

func (m *PayReq) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PayReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type PayResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Success              string   `protobuf:"bytes,2,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayResp) Reset()         { *m = PayResp{} }
func (m *PayResp) String() string { return proto.CompactTextString(m) }
func (*PayResp) ProtoMessage()    {}
func (*PayResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78ce6d11f0608d17, []int{1}
}

func (m *PayResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayResp.Unmarshal(m, b)
}
func (m *PayResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayResp.Marshal(b, m, deterministic)
}
func (m *PayResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayResp.Merge(m, src)
}
func (m *PayResp) XXX_Size() int {
	return xxx_messageInfo_PayResp.Size(m)
}
func (m *PayResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PayResp.DiscardUnknown(m)
}

var xxx_messageInfo_PayResp proto.InternalMessageInfo

func (m *PayResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PayResp) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

func (m *PayResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*PayReq)(nil), "PayReq")
	proto.RegisterType((*PayResp)(nil), "PayResp")
}

func init() { proto.RegisterFile("proto/payment/payment.proto", fileDescriptor_78ce6d11f0608d17) }

var fileDescriptor_78ce6d11f0608d17 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x48, 0xac, 0xcc, 0x4d, 0xcd, 0x2b, 0x81, 0xd1, 0x7a, 0x60, 0x51, 0x29, 0x99,
	0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc, 0x92,
	0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0xac, 0x92, 0x0d, 0x17, 0x5b, 0x40, 0x62, 0x65, 0x50,
	0x6a, 0xa1, 0x90, 0x04, 0x17, 0x7b, 0x7e, 0x51, 0x4a, 0x6a, 0x91, 0x67, 0x8a, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x8c, 0x0b, 0x92, 0x49, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x91, 0x60,
	0x82, 0xc8, 0x40, 0xb9, 0x4a, 0x9e, 0x5c, 0xec, 0x60, 0xdd, 0xc5, 0x05, 0x42, 0x42, 0x5c, 0x2c,
	0xc9, 0xf9, 0x29, 0xa9, 0x60, 0xbd, 0xac, 0x41, 0x60, 0x36, 0x48, 0x63, 0x71, 0x69, 0x72, 0x72,
	0x6a, 0x71, 0x31, 0x4c, 0x23, 0x94, 0x2b, 0x24, 0xc0, 0xc5, 0x9c, 0x5b, 0x9c, 0x2e, 0xc1, 0x0c,
	0x16, 0x05, 0x31, 0x8d, 0x1c, 0xb9, 0xf8, 0x02, 0x20, 0xee, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c,
	0x4e, 0x15, 0xd2, 0xe7, 0x62, 0x0e, 0x48, 0xac, 0x14, 0x62, 0xd7, 0x83, 0x38, 0x50, 0x8a, 0x43,
	0x0f, 0x6a, 0x97, 0x92, 0x68, 0xd3, 0xe5, 0x27, 0x93, 0x99, 0xf8, 0x95, 0xb8, 0xf4, 0xc1, 0x4e,
	0x04, 0x79, 0xd8, 0x8a, 0x51, 0x2b, 0x89, 0x0d, 0xec, 0x25, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xcc, 0xfa, 0x02, 0x43, 0x0f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error) {
	out := new(PayResp)
	err := c.cc.Invoke(ctx, "/PaymentService/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	Pay(context.Context, *PayReq) (*PayResp, error)
}

// UnimplementedPaymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentServiceServer struct {
}

func (*UnimplementedPaymentServiceServer) Pay(ctx context.Context, req *PayReq) (*PayResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PaymentService/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Pay(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pay",
			Handler:    _PaymentService_Pay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/payment/payment.proto",
}
